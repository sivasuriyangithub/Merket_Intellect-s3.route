# Generated by Django 2.2.8 on 2020-01-23 01:47

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import whoweb.contrib.postgres.fields
import whoweb.contrib.postgres.utils
import whoweb.search.models.embedded


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0013_auto_20200120_2323"),
        ("coldemail", "0008_auto_20200122_2326"),
        ("campaigns", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="IntervalCampaignRunner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                (
                    "query",
                    whoweb.contrib.postgres.fields.EmbeddedModelField(
                        default=whoweb.search.models.embedded.FilteredSearchQuery,
                        encoder=whoweb.contrib.postgres.utils.EmbeddedJSONEncoder,
                        model_container=whoweb.search.models.embedded.FilteredSearchQuery,
                    ),
                ),
                ("budget", models.PositiveIntegerField()),
                ("published", models.DateTimeField(null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Draft"),
                            (2, "Pending"),
                            (4, "Paused"),
                            (8, "Published"),
                            (16, "Running"),
                            (32, "Sending"),
                            (128, "Complete"),
                        ],
                        db_index=True,
                        default=0,
                        verbose_name="status",
                    ),
                ),
                (
                    "status_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now,
                        monitor="status",
                        verbose_name="status changed",
                    ),
                ),
                (
                    "tracking_params",
                    django.contrib.postgres.fields.jsonb.JSONField(null=True),
                ),
                (
                    "interval_hours",
                    models.PositiveIntegerField(
                        default=24, help_text="Interval between each campaign."
                    ),
                ),
                (
                    "max_sends",
                    models.PositiveIntegerField(
                        help_text="Total campaigns allowed for this manager.", null=True
                    ),
                ),
                (
                    "use_credits_method",
                    models.CharField(blank=True, max_length=63, null=True),
                ),
                ("open_credit_budget", models.IntegerField()),
                (
                    "campaigns",
                    models.ManyToManyField(
                        related_name="_intervalcampaignrunner_campaigns_+",
                        to="coldemail.ColdCampaign",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AlterField(
            model_name="simplesendingrule",
            name="message_template",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="coldemail.CampaignMessageTemplate",
            ),
        ),
        migrations.CreateModel(
            name="IntervalSendingRule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveIntegerField()),
                (
                    "trigger",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "At a specified time"),
                            (1, "Seconds after previous"),
                            (2, "A short delay after creation"),
                        ],
                        default=2,
                    ),
                ),
                ("send_datetime", models.DateTimeField(null=True)),
                ("send_delta", models.PositiveIntegerField(null=True)),
                ("include_previous", models.BooleanField(default=False)),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="campaigns.IntervalCampaignRunner",
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="coldemail.CampaignMessage",
                    ),
                ),
                (
                    "message_template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="coldemail.CampaignMessageTemplate",
                    ),
                ),
            ],
            options={"abstract": False, "unique_together": {("index", "manager")},},
        ),
        migrations.CreateModel(
            name="IntervalDripRecord",
            fields=[
                (
                    "abstractbasedriprecord_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="campaigns.AbstractBaseDripRecord",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="campaigns.IntervalCampaignRunner",
                    ),
                ),
            ],
            bases=("campaigns.abstractbasedriprecord",),
        ),
        migrations.AddField(
            model_name="intervalcampaignrunner",
            name="drips",
            field=models.ManyToManyField(
                related_name="_intervalcampaignrunner_drips_+",
                through="campaigns.IntervalDripRecord",
                to="coldemail.ColdCampaign",
            ),
        ),
        migrations.AddField(
            model_name="intervalcampaignrunner",
            name="messages",
            field=models.ManyToManyField(
                through="campaigns.IntervalSendingRule", to="coldemail.CampaignMessage"
            ),
        ),
        migrations.AddField(
            model_name="intervalcampaignrunner",
            name="preset_campaign_list",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="coldemail.CampaignList",
            ),
        ),
        migrations.AddField(
            model_name="intervalcampaignrunner",
            name="scroll",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="search.ScrollSearch",
            ),
        ),
    ]
