apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "jx.fullname" . }}
  labels:
    chart: {{ template "jx.chart" . }}
  {{- if .Values.deployment.reloadOnEnvChange }}
  annotations:
    {{- if .Values.deployment.envConfigMapRef }}
    configmap.reloader.stakater.com/reload: "{{.Values.deployment.envConfigMapRef}}"
    {{- end }}
    {{- if .Values.deployment.envSecretRef }}
    secret.reloader.stakater.com/reload: "{{.Values.deployment.envSecretRef}}"
    {{- end }}
  {{- end }}
spec:
{{- if .Values.deployment.replicas }}
  replicas: {{ .Values.deployment.replicas }}
{{- end }}
{{- if .Values.deployment.strategy }}
  strategy:
{{ toYaml .Values.deployment.strategy | indent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app: {{ template "jx.fullname" . }}
    spec:
      terminationGracePeriodSeconds: {{ default 30 .Values.deployment.gracePeriod }}
      hostAliases:
      - ip: "10.10.0.2"
        hostnames:
        - "vm-mongo-cs-gce-01"
      - ip: "10.10.0.4"
        hostnames:
        - "vm-mongo-cs-gce-02"
      - ip: "10.10.0.7"
        hostnames:
        - "vm-mongo-cs-gce-03"
      - ip: "10.10.0.14"
        hostnames:
        - "vm-webprofiles-cs-gce-201"
      - ip: "10.10.0.15"
        hostnames:
        - "vm-webprofiles-cs-gce-202"
      - ip: "10.10.0.6"
        hostnames:
        - "vm-webprofiles-cs-gce-203"
      - ip: "168.61.162.168"
        hostnames:
        - "vm-webprofiles-cs-azc-01"
      - ip: "40.77.58.181"
        hostnames:
        - "vm-webprofiles-cs-azc-02"
      - ip: "168.61.220.114"
        hostnames:
        - "vm-webprofiles-cs-azc-03"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
{{- if .Values.deployment.command }}
          command:
            {{- range .Values.deployment.command }}
            - {{ . | quote }}
            {{- end }}
{{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: IMAGE
            value: {{ .Values.image.repository }}
          - name: REVISION
            value: {{ .Values.image.tag }}
          - name: ENVIRONMENT_NAME
            value: {{ .Release.Name }}
{{- if .Values.deployment.env}}
{{ toYaml .Values.deployment.env | indent 10 -}}
{{- end}}
{{- if or .Values.deployment.envConfigMapRef .Values.deployment.envSecretRef }}
          envFrom:
{{- if .Values.deployment.envConfigMapRef }}
          - configMapRef:
              name: {{ .Values.deployment.envConfigMapRef }}
{{- end }}
{{- if .Values.deployment.envSecretRef }}
          - secretRef:
              name: {{ .Values.deployment.envSecretRef }}
{{- end }}
{{- end }}
{{- if .Values.deployment.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.deployment.readinessProbe | indent 12 }}
{{- end }}
{{- if .Values.service }}
          ports:
            {{- range .Values.service.ports }}
            - containerPort: {{ default .port .targetPort }}
            {{- end }}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
{{- if .Values.deployment.configMountPath }}
          - name: config
            mountPath: {{ .Values.deployment.configMountPath }}
            readOnly: true
{{- end }}
{{ if .Values.deployment.volumeMounts }}{{ toYaml .Values.deployment.volumeMounts | indent 10 }}{{ end }}
      initContainers:
        {{- if .Values.selfInitContainer }}
        - name: {{ .Values.selfInitContainer.name }}
          volumeMounts:
{{ toYaml .Values.selfInitContainer.volumeMounts | indent 12 }}
          envFrom:
{{ toYaml .Values.selfInitContainer.envFrom | indent 12 }}
          env:
{{ toYaml .Values.selfInitContainer.env | indent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            {{- range .Values.selfInitContainer.command }}
            - {{ . | quote }}
            {{- end }}
        {{- end }}
{{ if .Values.initContainers }}{{ toYaml .Values.initContainers | indent 8 }}{{ end }}
      volumes:
{{- if .Values.deployment.configMountPath }}
      - name: config
        secret:
          secretName: {{ .Values.deployment.configSecretName }}
          items:
          - key: {{ .Values.deployment.configKey }}
            path: {{ .Values.deployment.configFilePath }}
{{- end }}
{{ if .Values.volumes }}{{ toYaml .Values.volumes | indent 6 }}{{ end }}
