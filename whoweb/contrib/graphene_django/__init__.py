import graphene
from graphene.types.generic import GenericScalar
from graphene_django.rest_framework import serializer_converter
from graphene_django.rest_framework.serializer_converter import (
    convert_serializer_field,
    get_graphene_type_from_serializer_field,
)
from rest_framework import serializers


def convert_serializer_to_input_type(serializer_class):
    """
    This patch will remove the word "Serializer" from the
    nested inputs autogenerated by graphene_django.rest_framework
    """

    cached_type = convert_serializer_to_input_type.cache.get(
        serializer_class.__name__, None
    )
    if cached_type:
        return cached_type
    serializer = serializer_class()

    items = {
        name: convert_serializer_field(field)
        for name, field in serializer.fields.items()
    }
    ret_type = type(
        "{}Input".format(serializer.__class__.__name__).replace(
            "SerializerInput", "Input"
        ),
        (graphene.InputObjectType,),
        items,
    )
    convert_serializer_to_input_type.cache[serializer_class.__name__] = ret_type
    return ret_type


convert_serializer_to_input_type.cache = {}
serializer_converter.convert_serializer_to_input_type = convert_serializer_to_input_type


@get_graphene_type_from_serializer_field.register(serializers.JSONField)
def convert_json_field_to_generic(field):
    return GenericScalar
