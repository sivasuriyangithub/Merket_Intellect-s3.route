apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "jx.fullname" . }}-post-install"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/post-deploy"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: IMAGE
            value: {{ .Values.image.repository }}
          - name: REVISION
            value: {{ .Values.image.tag }}
          - name: ENVIRONMENT_NAME
            value: {{ .Release.Name }}
{{- if .Values.deployment.env}}
{{ toYaml .Values.deployment.env | indent 10 -}}
{{- end}}
{{- if or .Values.deployment.envConfigMapRef .Values.deployment.envSecretRef }}
          envFrom:
{{- if .Values.deployment.envConfigMapRef }}
          - configMapRef:
              name: {{ .Values.deployment.envConfigMapRef }}
{{- end }}
{{- if .Values.deployment.envSecretRef }}
          - secretRef:
              name: {{ .Values.deployment.envSecretRef }}
{{- end }}
{{- end }}
{{ if .Values.deployment.volumeMounts }}{{ toYaml .Values.deployment.volumeMounts | indent 10 }}{{ end }}
